# Use Shift + Click to select a robot
# When a robot is selected, its variables appear in this editor

# Use Ctrl + Click (Cmd + Click on Mac) to move a selected robot to a different location



# Put your global variables here

# This function is executed every time you press the 'execute' button
function vec2_new_polar(length, angle) {
   var vec2 
   vec2 = { .x = length * math.cos(angle),
            .y = length * math.sin(angle)
   }
   return vec2
}

function vec2_sum(v1, v2) {
   v1.x = v1.x + v2.x
   v1.y = v1.y + v2.y
	 return v1
}

function vec2_angle(v) {
   return math.atan(v.y, v.x)
}



function init() {
#kheperaiv_light(t)

log("Initialized")
#gotoc(20,0)
#tab = kheperaiv_proximity()


}



# This function is executed at each time setep
# It must contain the logic of your controller
function step() {
   # put your code here
#var sum_fx
#var sum_fy
#var sum_a
#sum_a = 0
#sum_fx = 0
#sum_fy = 0
#var x
#sig = 
var i
i = 0
var s = {.x = 0 , .y = 0 }
# Taking 8 sensor values from each robot
# Getting values from proximity sensor
v={}
while (i < 8) 
{

length = proximity[i].value # magnitude of the sensor vector
angle = proximity[i].angle # angle of the sensor vector
v.i = vec2_new_polar(length,angle)

log(i)

s = vec2_sum(v.i,s)

#v1 = v.i + v.i+1
i = i+1
log("V = ",s)
}

a2 = vec2_angle(s)

#v_sum = vec2_sum(v.1,v.2)
m = math.sqrt(s.x*s.x + s.y*s.y)
l =m/3
log("Angle = ",a2)
log("Vector = ",l)


if (l < 0.01){
 set_wheels(20.0,20.0)
} 

if ((a2 == 0) and (l > 0.01)){
 set_wheels(20.0, 0.0)
}

if ((a2 < 1.5708) and (a2 >0)){
 set_wheels(20.0,0.0)
}

if ((a2 >-1.5708) and (a2 < 0 )){
	set_wheels(0.0,20.0)
}




#log("fx = ",fx)
#log("fy = ", fy)
#sum_fx = sum_fx + fx
#sum_fy = sum_fy + fy
#sum_a = sum_a + a



#log("proximity value = ",x)
#log("proximity angle = ",a)
#log("sum of x = ",sum_fx)
#log("sum of y = ",sum_fy)




 
#avg_a = sum_a/8
#avg_x = sum_fx/8
#avg_y = sum_fy/8
#log("avg_x = ",avg_x)
#log("avg_y = ",avg_y)
#log("avg_a = ", avg_a)
#log("Inside step")


#if ((sum_fx != 0) and (sum_fy != 0)){
 #alpha = math.atan2(sum_fy, sum_fx)
 #move = alpha + 3.14159
  #log("angle = ",new_direction)
 #f = math.sqrt((avg_x*avg_x)+(avg_y*avg_y))
#f1 = f/8
 #log("avg f = ", f)
 #log("angle = ", alpha)
 
#}
#if (alpha < ){
 #set_wheels(10.0,10.0)}

  #gotop(10.0,new_direction)
#neighbors.broadcast("distance",mydist)

#if (mydist > 0)
#set_wheels(10.0,10.0) # going straight
# steering towards left and moving ahead
#gotoc(20,0) # Moving according to x and y direction
 #set_leds(0,255,0)
 log("Lights")

}



# This function is executed every time you press the 'reset'
# button in the GUI. It is supposed to restore the state
# of the controller to whatever it was right after init() was
# called. The state of sensors and actuators is reset
# automatically by ARGoS.
function reset() {
   # put your code here
}



# This function is executed only once, when the robot is removed
# from the simulation
function destroy() {
   # put your code here
}
